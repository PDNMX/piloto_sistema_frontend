{
  "{\"sourceRoot\":\"C:\\\\Users\\\\FRANCISCO\\\\Documents\\\\GitHub\\\\txm\\\\piloto_sistema_frontend\\\\src\\\\server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FRANCISCO\\\\Documents\\\\GitHub\\\\txm\\\\piloto_sistema_frontend\",\"filename\":\"C:\\\\Users\\\\FRANCISCO\\\\Documents\\\\GitHub\\\\txm\\\\piloto_sistema_frontend\\\\src\\\\server\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FRANCISCO\\\\Documents\\\\GitHub\\\\txm\\\\piloto_sistema_frontend\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FRANCISCO\\Documents\\GitHub\\txm\\piloto_sistema_frontend\\src\\server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FRANCISCO\\Documents\\GitHub\\txm\\piloto_sistema_frontend",
      "filename": "C:\\Users\\FRANCISCO\\Documents\\GitHub\\txm\\piloto_sistema_frontend\\src\\server\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FRANCISCO\\Documents\\GitHub\\txm\\piloto_sistema_frontend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FRANCISCO\\Documents\\GitHub\\txm\\piloto_sistema_frontend\\src\\server\\server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FRANCISCO\\Documents\\GitHub\\txm\\piloto_sistema_frontend\\src\\server\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FRANCISCO\\Documents\\GitHub\\txm\\piloto_sistema_frontend\\src\\server\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst mongoose = require('mongoose');\n\nconst yaml = require('js-yaml');\n\nconst fs = require('fs');\n\nconst validateSchema = require('yaml-schema-validator');\n\nconst SwaggerClient = require('swagger-client');\n\nvar Validator = require('swagger-model-validator');\n\nvar validator = new Validator(SwaggerClient);\nconsole.log(_path.default.resolve(__dirname, '../utils/.env'));\n\nrequire('dotenv').config({\n  path: _path.default.resolve(__dirname, '../utils/.env')\n}); //connection mongo db\n\n\nconsole.log('mongodb://' + process.env.USERMONGO + ':' + process.env.PASSWORDMONGO + '@' + process.env.HOSTMONGO + '/' + process.env.DATABASE);\nconst db = mongoose.connect('mongodb://' + process.env.USERMONGO + ':' + process.env.PASSWORDMONGO + '@' + process.env.HOSTMONGO + '/' + process.env.DATABASE, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => console.log('Connect to MongoDB..')).catch(err => console.error('Could not connect to MongoDB..', err));\nlet port = process.env.PORT || 7777;\nlet app = (0, _express.default)();\napp.use((0, _cors.default)(), _bodyParser.default.urlencoded({\n  extended: true\n}), _bodyParser.default.json());\nlet server = app.listen(3004, function () {\n  let host = server.address().address;\n  let port = server.address().port;\n  console.log(' function cloud Server is listening at http://%s:%s', host, port);\n});\napp.post('/validateSchemaS2', async (req, res) => {\n  let fileContents = fs.readFileSync(_path.default.resolve(__dirname, '../app/resource/openapis2.yaml'), 'utf8');\n  let data = yaml.safeLoad(fileContents);\n  let schemaS2 = data.components.schemas.respSpic_inner;\n  let newdocument = req.body;\n  let respuesta = [];\n\n  if (Array.isArray(newdocument)) {\n    for (let doc of newdocument) {\n      var validation = validator.validate(doc, schemaS2);\n      respuesta.push(validation);\n    }\n  } else {\n    var validation = validator.validate(newdocument, schemaS2);\n    respuesta.push(validation);\n  }\n\n  res.status(200).json(respuesta);\n});\n\nif (process.env.NODE_ENV == `production`) {\n  app.use(_express.default.static(_path.default.resolve(__dirname, '../../dist')));\n  app.get('/*', (req, res) => {\n    res.sendFile(_path.default.resolve('index.html'));\n  });\n}\n\napp.post('/task/new', async (req, res) => {\n  // let task = req.body.task;\n  await addNewTask(req.body.task);\n  res.status(200).send();\n});\napp.post('/task/update', async (req, res) => {\n  let db = await connectDB();\n  await updateTask(req.body.task);\n  res.status(200).send();\n});\napp.post('/comment/new', async (req, res) => {\n  let comment = req.body.comment;\n  let db = await connectDB();\n  let collection = db.collection(`comments`);\n  await collection.insertOne(comment);\n  res.status(200).send();\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoose",
        "require",
        "yaml",
        "fs",
        "validateSchema",
        "SwaggerClient",
        "Validator",
        "validator",
        "console",
        "log",
        "path",
        "resolve",
        "__dirname",
        "config",
        "process",
        "env",
        "USERMONGO",
        "PASSWORDMONGO",
        "HOSTMONGO",
        "DATABASE",
        "db",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "then",
        "catch",
        "err",
        "error",
        "port",
        "PORT",
        "app",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "server",
        "listen",
        "host",
        "address",
        "post",
        "req",
        "res",
        "fileContents",
        "readFileSync",
        "data",
        "safeLoad",
        "schemaS2",
        "components",
        "schemas",
        "respSpic_inner",
        "newdocument",
        "body",
        "respuesta",
        "Array",
        "isArray",
        "doc",
        "validation",
        "validate",
        "push",
        "status",
        "NODE_ENV",
        "express",
        "static",
        "get",
        "sendFile",
        "addNewTask",
        "task",
        "send",
        "connectDB",
        "updateTask",
        "comment",
        "collection",
        "insertOne"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FRANCISCO\\Documents\\GitHub\\txm\\piloto_sistema_frontend\\src\\server\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport cors from 'cors';\r\nimport bodyParser from 'body-parser';\r\nimport path from 'path';\r\nconst mongoose = require('mongoose');\r\nconst yaml = require('js-yaml')\r\nconst fs = require('fs');\r\nconst validateSchema = require('yaml-schema-validator');\r\nconst SwaggerClient = require('swagger-client');\r\n\r\nvar Validator = require('swagger-model-validator');\r\nvar validator = new Validator(SwaggerClient);\r\n\r\nconsole.log(path.resolve(__dirname, '../utils/.env'));\r\n\r\nrequire('dotenv').config({ path: path.resolve(__dirname, '../utils/.env')});\r\n\r\n//connection mongo db\r\nconsole.log('mongodb://'+process.env.USERMONGO+':'+process.env.PASSWORDMONGO+'@'+process.env.HOSTMONGO+'/'+process.env.DATABASE);\r\nconst db = mongoose.connect('mongodb://'+process.env.USERMONGO+':'+process.env.PASSWORDMONGO+'@'+process.env.HOSTMONGO+'/'+process.env.DATABASE, { useNewUrlParser: true,  useUnifiedTopology: true  })\r\n    .then(() => console.log('Connect to MongoDB..'))\r\n    .catch(err => console.error('Could not connect to MongoDB..', err))\r\n\r\n\r\nlet port = process.env.PORT || 7777;\r\nlet app = express();\r\napp.use(\r\n    cors(),\r\n    bodyParser.urlencoded({extended:true}),\r\n    bodyParser.json()\r\n);\r\n\r\nlet server = app.listen(3004, function () {\r\n    let host = server.address().address;\r\n    let port = server.address().port;\r\n    console.log(' function cloud Server is listening at http://%s:%s', host, port);\r\n});\r\n\r\n\r\napp.post('/validateSchemaS2',async (req,res)=>{\r\n    let fileContents = fs.readFileSync( path.resolve(__dirname, '../app/resource/openapis2.yaml'), 'utf8');\r\n    let data = yaml.safeLoad(fileContents);\r\n    let schemaS2 =  data.components.schemas.respSpic_inner;\r\n\r\n    let newdocument = req.body;\r\n    let respuesta=[];\r\n    if(Array.isArray(newdocument)){\r\n        for (let doc of newdocument){\r\n            var validation = validator.validate(doc, schemaS2);\r\n            respuesta.push(validation);\r\n        }\r\n    }else{\r\n        var validation = validator.validate(newdocument, schemaS2);\r\n        respuesta.push(validation);\r\n    }\r\n\r\n    res.status(200).json(respuesta);\r\n});\r\n\r\n\r\nif (process.env.NODE_ENV == `production`) {\r\n    app.use(express.static(path.resolve(__dirname,'../../dist')));\r\n    app.get('/*',(req,res)=>{\r\n        res.sendFile(path.resolve('index.html'));\r\n    });\r\n}\r\n\r\napp.post('/task/new',async (req,res)=>{\r\n    // let task = req.body.task;\r\n    await addNewTask(req.body.task);\r\n    res.status(200).send();\r\n});\r\n\r\n\r\n\r\napp.post('/task/update',async (req,res)=>{\r\n    let db = await connectDB();\r\n    await updateTask(req.body.task);\r\n    res.status(200).send();\r\n});\r\n\r\napp.post('/comment/new',async (req,res)=>{\r\n    let comment = req.body.comment;\r\n    let db = await connectDB();\r\n    let collection = db.collection(`comments`);\r\n    await collection.insertOne(comment);\r\n    res.status(200).send();\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1606319990685
  }
}